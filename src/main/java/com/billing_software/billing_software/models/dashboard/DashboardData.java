package com.billing_software.billing_software.models.dashboard;

import java.util.List;

import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

@Getter
@Setter
@AllArgsConstructor
@NoArgsConstructor
public class DashboardData {

    private List<MonthlySalesTrend> monthlySalesTrend; // Monthly sales trend data
    private List<TopSellingProduct> topSellingProducts; // Monthly List of top-selling products
    private List<TopBuyingCustomer> topBuyingCustomers; // Monthly List of top customers
    private Double newCustomerRate; // Percentage of new customers
    private Double totalSales; // Total sales amount for the period
    private Integer totalTransactions; // Total number of sales transactions
    private Integer newCustomers; // Number of new customers acquired
    private Double averageOrderValue; // Average value of each order

    // Nested model to represent monthly sales trend
    @Getter
    @Setter
    @AllArgsConstructor
    @NoArgsConstructor
    public static class MonthlySalesTrend {
        private Integer year; // Year
        private String month; // Month name (e.g., "January", "February")
        private Double totalSales; // Total sales amount for the month
        private Integer totalTransactions; // Total transactions in the month
    }

    // Nested model for top-selling products
    @Getter
    @Setter
    @AllArgsConstructor
    @NoArgsConstructor
    public static class TopSellingProduct {
        private String month; // Month name (e.g., "January", "February")
        private String productId; // Unique product identifier
        private String productName; // Name of the product
        private Integer quantitySold; // Quantity of the product sold
        private Double totalRevenue; // Total revenue generated by the product
    }

    // Nested model for top buying customers
    @Getter
    @Setter
    @AllArgsConstructor
    @NoArgsConstructor
    public static class TopBuyingCustomer {
        private String month; // Month name (e.g., "January", "February")
        private String customerId; // Unique customer identifier
        private String customerName; // Name of the customer
        private Double totalSpent; // Total amount spent by the customer
        private Integer totalTransactions; // Number of transactions by the customer
    }

    public void calculateNewCustomerRate(int totalCustomers, int newCustomers) {
        if (totalCustomers > 0) {
            this.newCustomerRate = (newCustomers / (double) totalCustomers) * 100;
        } else {
            this.newCustomerRate = 0.0;
        }
    }

    public void calculateAverageOrderValue() {
        if (totalTransactions > 0) {
            this.averageOrderValue = totalSales / totalTransactions;
        } else {
            this.averageOrderValue = 0.0;
        }
    }
}
